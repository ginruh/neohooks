server {
  listen 80;
  listen [::]:80;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  server_name neohooks.site www.neohooks.site;

  location / {
    return 301 https://$host$request_uri;

  }

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/html;
  }
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl_certificate /etc/letsencrypt/live/neohooks.site/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/neohooks.site/privkey.pem;
  
  # webhook url
  location / {
    # pass cookie header
    proxy_pass_header  Set-Cookie;
    # set proxy headers
    proxy_set_header   Host               $http_host;
    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   X-Forwarded-Proto  $scheme;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Request-Id       $request_id;
    proxy_set_header   X-Request-Time     $time_iso8601;
    proxy_pass http://api:5000;
    proxy_redirect off;
  }

  # API
  location /api {
    # pass cookie header
    proxy_pass_header  Set-Cookie;
    # set proxy headers
    proxy_set_header   Host               $http_host;
    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   X-Forwarded-Proto  $scheme;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Request-Id       $request_id;
    proxy_set_header   X-Request-Time     $time_iso8601;
    # proxy pass
    proxy_pass http://api:5000/api;
    proxy_redirect off;
  }

  # ws api
  location ~ ^/api/ws {
    # ws proxy headers
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    # other proxy headers
    proxy_set_header   Host               $http_host;
    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   X-Forwarded-Proto  $scheme;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Request-Id       $request_id;
    proxy_set_header   X-Request-Time     $time_iso8601;
    proxy_pass http://api:5000;
  }
   
  # UI
  # strict / route match for homepage
  location = / {
    proxy_pass http://ui:3000;
    proxy_redirect off;
  }

  # matching static files served for ui
  location ~ ^/static {
    proxy_pass http://ui:3000;
    proxy_redirect off;
  }
  
  location ~ (.json|.ico|.png)$ {
    proxy_pass http://ui:3000;
    proxy_redirect off;
  }
  
  # matching /w/:id for ui
  location ~ ^/w/ {
    proxy_pass http://ui:3000;
    proxy_redirect off;
  }
}
